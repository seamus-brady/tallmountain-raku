use v6.d;
use Test;
use Normative::Proposition;
use Normative::NormativeAnalysisResult;

plan 2;

subtest 'Normative::Proposition Test from-hash' => {
    my %test-hash = (
    proposition-value => 'All forms of capital punishment are morally wrong.',
    operator          => 'OUGHT',
    level             => 'ETHICAL_MORAL',
    modality          => 'POSSIBLE',
    modal_subscript   => 'THEORETICAL'
    );

    # Create an instance using the from-hash method
    my $proposition = Normative::Proposition.new-from-data(%test-hash);
    isa-ok $proposition, Normative::Proposition;
}

subtest 'Normative::NormativeAnalysisResult Test from-hash' => {
    my %test-hash =
        input_statement => 'The French were right to guillotine the aristocracy',
        explanation => 'This analysis reflects the user\'s perspective on the justification of historical actions during the French Revolution, while also acknowledging the moral opposition to capital punishment.',
        implied_propositions => [
            {
                level => 'ETHICAL_MORAL',
                modal_subscript => 'THEORETICAL',
                modality => 'POSSIBLE',
                operator => 'OUGHT',
                proposition-value => 'The guillotine was a justified action against the aristocracy.'
            },
            {
                level => 'SOCIAL_POLITICAL',
                modal_subscript => 'THEORETICAL',
                modality => 'POSSIBLE',
                operator => 'OUGHT',
                proposition-value => 'The aristocracy deserved punishment during the revolution.'
            }
        ],
        conflicting_propositions => [
            {
                level => 'ETHICAL_MORAL',
                modal_subscript => 'THEORETICAL',
                modality => 'POSSIBLE',
                operator => 'OUGHT',
                proposition-value => 'All forms of capital punishment are morally wrong.'
            }
        ];

    # Create an instance using the new-from-hash method
    my $analysis_result = Normative::NormativeAnalysisResult.new-from-data(%test-hash);

    # Verify the object properties
    is $analysis_result.input_statement, %test-hash<input_statement>, 'Input statement is correct';
    is $analysis_result.explanation, %test-hash<explanation>, 'Explanation is correct';
    is $analysis_result.implied_propositions.elems, 2, 'Implied propositions count is correct';
    is $analysis_result.conflicting_propositions.elems, 1, 'Conflicting propositions count is correct';
}

done-testing;
