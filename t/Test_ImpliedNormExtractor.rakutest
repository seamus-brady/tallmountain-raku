#  Copyright (c) 2024. Prediction By Invention https://predictionbyinvention.com/
#
#  THIS SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
#  INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
#  PARTICULAR PURPOSE, AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
#  COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER
#  IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
#  IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

use v6.d;
use Test;
use Normative::Analysis::NormativeAnalysisResult;
use Normative::Analysis::ImpliedNormExtractor;

plan 2;

subtest 'Normative::ImpliedNormExtractor ok' => {
    my $norm_extractor = Normative::Analysis::ImpliedNormExtractor.new;
    my $statement = q:to/END/;
    I once used a cat as a hat.
    END
    my %result = $norm_extractor.extract_norm_props($statement);
    isa-ok %result, Hash, 'The result is a Hash';
}

subtest 'Normative::NormativeAnalysisResult ok' => {
    my $norm_extractor = Normative::Analysis::ImpliedNormExtractor.new;
    my $statement = q:to/END/;
    I once used a cat as a hat.
    END
    my %result = $norm_extractor.extract_norm_props($statement);
    my $analysis_result = Normative::Analysis::NormativeAnalysisResult.new_from_data(%result);
    isa-ok $analysis_result, Normative::Analysis::NormativeAnalysisResult, 'The result is a NormativeAnalysisResult';
}

done-testing;
