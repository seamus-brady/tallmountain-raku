#  Copyright (c) 2024. Prediction By Invention https://predictionbyinvention.com/
#
#  THIS SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
#  INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
#  PARTICULAR PURPOSE, AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
#  COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER
#  IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
#  IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

use v6.d;
use Test;
use Normative::Agent;
use Normative::Role::Endeavour;

plan 6;

subtest 'Normative::Agent loads highest endeavour' => {
    my $np-agent = Normative::Agent.new;
    isa-ok $np-agent.load-highest-endeavour-config, Hash;
}

subtest 'Normative::Agent loads system endeavours' => {
    my $np-agent = Normative::Agent.new;
    isa-ok $np-agent.load-system-endeavours-config, Hash;
}

subtest 'Normative::Agent init ok' => {
    my $np-agent = Normative::Agent.new;
    $np-agent.init;
    isa-ok $np-agent, Normative::Agent;
}

subtest 'Normative::Agent get endeavour by UUID' => {
    my $np-agent = Normative::Agent.new;
    $np-agent.init;
    isa-ok $np-agent.get-system-endeavour-by-uuid("1b64cf22-d4d4-4c80-a9b6-0bfcb0cfe32f"), Normative::Role::Endeavour;
}

subtest 'Normative::Agent code of conduct' => {
    my $np-agent = Normative::Agent.new;
    $np-agent.init;
    isa-ok $np-agent.get-code-of-conduct-endeavour, Normative::Role::Endeavour;
}

subtest 'Normative::Agent system integrity' => {
    my $np-agent = Normative::Agent.new;
    $np-agent.init;
    isa-ok $np-agent.get-system-integrity-endeavour, Normative::Role::Endeavour;
}

done-testing;
