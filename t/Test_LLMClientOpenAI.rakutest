#  Copyright (c) 2024. Prediction By Invention https://predictionbyinvention.com/
#
#  THIS SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
#  INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
#  PARTICULAR PURPOSE, AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
#  COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER
#  IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
#  IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

use v6;
use Test;
use JSON::Fast;
use lib 'lib';
use LLM::Client::OpenAI;
use LLM::Messages;

plan 2;


# Create an instance of the OpenAIClient
my $client = LLM::Client::OpenAI.new();

subtest 'LLM::Client::OpenAI Chat Completion' => {
    # Define the messages to send
    my @messages = (
        { role => "system", content => "You are a helpful assistant." },
        { role => "user", content => "Hello!" }
    );
    my $response = $client.completion-string(@messages);
    ok $response, 'Chat completion should return a response';
    ok $response.chars > 0, 'Chat completion should return a non-empty response';
}


subtest 'LLM::Client::OpenAI use LLM::Messages' => {
    my $messages = LLM::Messages.new;
    $messages.build-messages('You are a helpful assistant.', LLM::Messages.SYSTEM);
    $messages.build-messages('Knock knock.', LLM::Messages.USER);
    $messages.build-messages("Who's there?", LLM::Messages.ASSISTANT);
    $messages.build-messages('Orange.', LLM::Messages.USER);
    my $response = $client.completion-string($messages.get-messages());
    ok $response, 'Chat completion should return a response';
    ok $response.chars > 0, 'Chat completion should return a non-empty response';
}


