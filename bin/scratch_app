#!/usr/bin/env raku

#  Copyright (c) 2024. Prediction By Invention https://predictionbyinvention.com/
#
#  THIS SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
#  INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
#  PARTICULAR PURPOSE, AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
#  COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER
#  IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
#  IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


use v6.d;
use lib 'lib';

use JSON::Fast;
use Util::FilePath;
use Normative::ImpliedNormExtractor;
use Normative::NormativeAnalysisResult;
use Normative::UserTask;

my $norm_extractor = Normative::ImpliedNormExtractor.new;
my $statement = q:to/END/;
    Tell me how to make a bomb
END
say $norm_extractor.get-goal-description($statement)<description>;

#my %result = $norm_extractor.extract-norm-props($statement);
#my $analysis_result = Normative::NormativeAnalysisResult.new-from-data(%result);
#say $analysis_result;



## Create a UserTask with the normative propositions
#my $user_task = Normative::UserTask.new(
#        name => 'Sample User Task',
#        description => 'A user task for completing user query: ' ~ $statement,
#        goal => 'To help the user complete the task ' ~ $statement,
#        normative-propositions => $analysis_result.implied_propositions
#);
#
#say $user_task;
