#!/usr/bin/env raku

#  Copyright (c) 2024. Prediction By Invention https://predictionbyinvention.com/
#
#  THIS SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
#  INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
#  PARTICULAR PURPOSE, AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
#  COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER
#  IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
#  IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


use v6.d;
use lib 'lib';
use Plan::Feature;
use Plan::Forecast::OneTier;

#my $feature1 = Plan::Feature.new(base-importance => 3, name => "Fuel Efficiency");
#say $feature1;
#say $feature1.calculated-discrepancy;

my $desired_future = Plan::Forecast::OneTier.new();
my $feature = Plan::Feature.new(base-importance => 1, name => "Fuel Efficiency");
$desired_future.add-feature($feature);
$desired_future.add-feature(Plan::Feature.new(base-importance => 2, name => "Safety"));
$desired_future.add-feature(Plan::Feature.new(base-importance => 3, name => "Coolness"));

my Plan::Forecast::OneTier $mustang_option = $desired_future.option();

say $mustang_option;

# update the option and it should not have the same discrepancy
$mustang_option.update(name => "Fuel Efficiency",  magnitude => 3);
$mustang_option.update(name => "Safety",  magnitude =>2);
$mustang_option.update(name => "Coolness",  magnitude =>0);

say $mustang_option.discrepancy;