#!/usr/bin/env raku

#  Copyright (c) 2024. Prediction By Invention https://predictionbyinvention.com/
#
#  THIS SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
#  INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
#  PARTICULAR PURPOSE, AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
#  COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER
#  IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
#  IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


use v6.d;
use lib 'lib';

use JSON::Fast;
use Util::FilePath;
use Normative::Proposition;
use Normative::Agent;

my $np-agent = Normative::Agent.new;
say $np-agent.init();

#my $config-dir = Util::FilePath.new.config-path;
#my $json-file = "$config-dir/system-endeavours.json";
#my $json = slurp $json-file;
#my %parsed-data = from-json($json);
#
## Map JSON data to Raku objects
#my @endeavours = %parsed-data<endeavours>.map({
#    Endeavour.new(
#            name => .<name>,
#            description => .<description>,
#            normative-propositions => .<normative_propositions>.map({
#                Normative::Proposition.new(
#                        uuid => .<uuid>,
#                        proposition-value => .<proposition_value>,
#                        operator => Normative::Proposition::Operator::{.<operator>},
#                        level => Normative::Proposition::Level::{.<level>},
#                        modality => Normative::Proposition::Modality::{.<modality>},
#                        modal-subscript => Normative::Proposition::ModalitySubscript::{.<modal_subscript>}
#                        )
#            })
#            )
#});
#
## Inspect the objects
#say @endeavours.gist;
