#!/usr/bin/env raku

#  Copyright (c) 2024. Prediction By Invention https://predictionbyinvention.com/
#
#  THIS SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
#  INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
#  PARTICULAR PURPOSE, AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
#  COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER
#  IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
#  IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

use v6.d;
use lib 'lib';
use Cro::HTTP::Router;
use Cro::HTTP::Server;

my $application = route {
    post -> 'chat' {
        my $prompt;

        request-body -> %fields {
            $prompt = %fields<message>;
        }
        # my $response = get_response($prompt, "Hello, I am a bot. I am still learning. Please be patient with me.");
        content 'text/html', qq:to/END/;
            <div class="message-container user-message-container">
            <img src="https://img.icons8.com/color/48/000000/user.png" class="icon" alt="User Icon">
            <span>$prompt
            </div>
            <div class="message-container bot-message-container">
            <img src="https://img.icons8.com/ios-filled/50/4a90e2/mountain.png" class="icon" alt="Bot Icon">
            <span>Hello!</span>
            </div>
            END
    }

    get -> {
        static 'www/chat_ui.html';
    }
}


sub get_response(Str $user_message, Str $bot_reply --> Str){
    my $response = qq:to/END/;
    <div class="message-container user-message-container">
    <img src="https://img.icons8.com/color/48/000000/user.png" class="icon" alt="User Icon">
    <span>$user_message</span>
    </div>
    <div class="message-container bot-message-container">
    <img src="https://img.icons8.com/ios-filled/50/4a90e2/mountain.png" class="icon" alt="Bot Icon">
    <span>$bot_reply</span>
    </div>
    END
    return $response.trim;
}

# Start the server in the background
my $server-thread = start {
    my $server = Cro::HTTP::Server.new: :host<localhost>, :port<10000>, :$application;
    $server.start;
    say "Listening at...";
    react {
        whenever signal(SIGINT) {
            say "Shutting down...";
            $server.stop;
            done;
        }
    }
}

# Main application logic
say "Web server running at http://localhost:10000";

my $server1 = Cro::HTTP::Server.new: :host<localhost>, :port<10001>, :$application;
$server1.start;

# Main application logic
say "Web server running at http://localhost:10001";

say "Listening at...";
react {
    whenever signal(SIGINT) {
        say "Shutting down...";
        $server1.stop;
        done;
    }
}